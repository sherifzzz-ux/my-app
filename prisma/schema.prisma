generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  CANCELLED
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  password  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  orders   Order[]
  reviews  Review[]
  cart     Cart?
  addresses Address[]
}

model Category {
  id        String    @id @default(cuid())
  name      String    @unique
  slug      String    @unique
  imageUrl  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  products Product[]
  subcategories Subcategory[]
}

model Product {
  id          String    @id @default(cuid())
  name        String
  description String?
  priceCents  Int       @default(0)
  imageUrl    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId String

  // Optionnels: relations et attributs marketing/stock
  subcategory   Subcategory? @relation(fields: [subcategoryId], references: [id])
  subcategoryId String?

  brand   Brand?   @relation(fields: [brandId], references: [id])
  brandId String?

  oldPriceCents Int?
  isFeatured    Boolean   @default(false)
  rating        Float?    @default(0)
  stock         Int       @default(0)

  reviews   Review[]
  orderItems OrderItem[]
  cartItems  CartItem[]
}

model Subcategory {
  id         String   @id @default(cuid())
  name       String
  slug       String   @unique
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  products Product[]
}

model Brand {
  id        String   @id @default(cuid())
  name      String   @unique
  slug      String   @unique
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]
}

model Review {
  id        String   @id @default(cuid())
  rating    Int
  comment   String?
  createdAt DateTime @default(now())

  product   Product @relation(fields: [productId], references: [id])
  productId String

  user   User @relation(fields: [userId], references: [id])
  userId String
}

model Order {
  id        String       @id @default(cuid())
  status    OrderStatus  @default(PENDING)
  totalCents Int         @default(0)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String

  items  OrderItem[]
}

model OrderItem {
  id        String  @id @default(cuid())
  quantity  Int     @default(1)
  unitPriceCents Int @default(0)

  order   Order   @relation(fields: [orderId], references: [id])
  orderId String

  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model Cart {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  items  CartItem[]
}

model CartItem {
  id        String @id @default(cuid())
  quantity  Int    @default(1)

  cart   Cart   @relation(fields: [cartId], references: [id])
  cartId String

  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model Address {
  id        String   @id @default(cuid())
  name      String
  phone     String
  city      String
  addressLine1 String
  addressLine2 String?
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String
}


