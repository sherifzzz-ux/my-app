const path = require('path');
const fs = require('fs');

console.log('üß™ Test du chargement des variables d\'environnement...\n');

// 1. V√©rifier le r√©pertoire de travail
console.log('1Ô∏è‚É£ R√©pertoire de travail:');
console.log('   - CWD:', process.cwd());
console.log('   - __dirname:', __dirname);
console.log('');

// 2. V√©rifier l'existence du fichier .env
console.log('2Ô∏è‚É£ Fichier .env:');
const envPath = path.join(process.cwd(), '.env');
const envPathAlt = path.join(__dirname, '.env');
const envPathParent = path.join(process.cwd(), '..', '.env');

console.log('   - Chemin principal:', envPath);
console.log('   - Existe:', fs.existsSync(envPath));
console.log('   - Chemin alternatif:', envPathAlt);
console.log('   - Existe:', fs.existsSync(envPathAlt));
console.log('   - Chemin parent:', envPathParent);
console.log('   - Existe:', fs.existsSync(envPathParent));
console.log('');

// 3. Lire le contenu du fichier .env
console.log('3Ô∏è‚É£ Contenu du fichier .env:');
if (fs.existsSync(envPath)) {
  try {
    const envContent = fs.readFileSync(envPath, 'utf8');
    const envLines = envContent.split('\n').filter(line => line.trim() && !line.startsWith('#'));
    
    console.log(`   - ${envLines.length} lignes non-vides trouv√©es:`);
    envLines.forEach((line, index) => {
      const [key] = line.split('=');
      console.log(`     ${index + 1}. ${key}`);
    });
  } catch (e) {
    console.log('   - Erreur lecture:', e.message);
  }
} else {
  console.log('   - Fichier .env non trouv√©');
}
console.log('');

// 4. Tester le chargement manuel
console.log('4Ô∏è‚É£ Test de chargement manuel:');
try {
  // Charger dotenv manuellement
  require('dotenv').config({ path: envPath });
  console.log('   - dotenv.config() ex√©cut√©');
  
  // V√©rifier les variables
  const vars = [
    'DATABASE_URL',
    'DIRECT_URL', 
    'NEXT_PUBLIC_SUPABASE_URL',
    'NEXT_PUBLIC_SUPABASE_ANON_KEY',
    'SUPABASE_SERVICE_ROLE_KEY'
  ];
  
  vars.forEach(varName => {
    const value = process.env[varName];
    if (value) {
      console.log(`   ‚úÖ ${varName}: Pr√©sent`);
      // Masquer la valeur pour la s√©curit√©
      const masked = value.substring(0, 20) + '...';
      console.log(`      Valeur: ${masked}`);
    } else {
      console.log(`   ‚ùå ${varName}: Manquant`);
    }
  });
  
} catch (e) {
  console.log('   - Erreur chargement dotenv:', e.message);
}
console.log('');

// 5. V√©rifier le module dotenv
console.log('5Ô∏è‚É£ Module dotenv:');
try {
  const dotenv = require('dotenv');
  console.log('   - Version:', dotenv.version || 'Non disponible');
  console.log('   - Module charg√© avec succ√®s');
} catch (e) {
  console.log('   - Erreur module dotenv:', e.message);
}

console.log('\nüéØ Conclusion:');
if (process.env.DATABASE_URL) {
  console.log('‚úÖ Variables d\'environnement maintenant charg√©es');
  console.log('üîß Le probl√®me √©tait le chargement de dotenv');
} else {
  console.log('‚ùå Variables toujours manquantes');
  console.log('üîß V√©rifiez la syntaxe de votre fichier .env');
}
